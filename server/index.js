const Telegraf = require("telegraf");
const session = require("telegraf/session");
const Stage = require("telegraf/stage");
const { leave } = Stage;

const Koa = require("koa");
const app = new Koa();

const path = require("path");
const fs = require("fs");
const axios = require("axios");
const { sleep } = require("./utils");
const { token } = require("./config");
const config = require("./config");
const { appId, appSecret } = config.poster;

// *** Scene registration ***
const stage = new Stage();

const scenes = fs.readdirSync(path.join(__dirname, "scenes")).sort();

scenes.forEach(sceneName => stage.register(require(`./scenes/${sceneName}`)));

// *** Bot init ***
const bot = new Telegraf(token[process.env.NODE_ENV]);

bot.use(session());
bot.use(stage.middleware());

bot.start(async ctx => {
  await ctx.reply(`–ü—Ä–∏–≤–µ—Ç, ${ctx.chat.first_name}!`);
  // await sleep(2000);

  await ctx.reply("–ú–µ–Ω—è –∑–æ–≤—É—Ç –°–æ–∫—Ä–∞—Ç –∏ —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å–µ–±—è –Ω–∞–∫–æ—Ä–º–∏—Ç—åüòÖ");
  // await sleep(2000);

  await ctx.reply(
    "–¢—ã –º–æ–∂–µ—à—å —Ä–∞—Å–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –≤—Ä–µ–º—è –ª–∞–Ω—á–µ–π –≤ –Ω–∞—à–µ–º –∑–∞–≤–µ–¥–µ–Ω–∏–∏ –Ω–∞ –Ω–µ–¥–µ–ª—é, –∏ —Å—Ä–∞–∑—É –∂–µ –æ–ø–ª–∞—Ç–∏—Ç—å"
  );
  // await sleep(2000);

  await ctx.reply(
    "–ö —Ç–≤–æ–µ–º—É –ø—Ä–∏—Ö–æ–¥—É –∑–∞–∫–∞–∑ –±—É–¥–µ—Ç –Ω–∞–∫—Ä—ã—Ç –Ω–∞ —Å—Ç–æ–ª–µ, –∏ —Ç–µ–±–µ –Ω–µ –ø—Ä–∏–¥–µ—Ç—Å—è –∂–¥–∞—Ç—å"
  );
  // await sleep(2000);

  await ctx.scene.enter("greeter");
});

// For all non-supportet phases
bot.on("text", ctx => {
  ctx.reply(
    `–ù–∏—á–µ–≥–æ –Ω–µ –ø–æ–Ω—è–ª. –Ø —Ä–∞–∑–±–∏—Ä–∞—é—Å—å —Ç–æ–ª—å–∫–æ –≤ –ª–∞–Ω—á–∞—Ö, –æ—Å—Ç–∞–ª—å–Ω–æ–µ –¥–ª—è –º–µ–Ω—è —Ç–µ–º–Ω—ã–π –ª–µ—Å üå≤`
  );
});

bot.startPolling();

app.listen(config.port);
